<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wh0am11&#39;s Blog</title>
  
  <subtitle>xxx</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-08T16:17:02.076Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wh0am11</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker Compose概述</title>
    <link href="http://yoursite.com/2019/09/09/overview/"/>
    <id>http://yoursite.com/2019/09/09/overview/</id>
    <published>2019-09-09T16:00:00.000Z</published>
    <updated>2019-09-08T16:17:02.076Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-Compose概述"><a href="#Docker-Compose概述" class="headerlink" title="Docker Compose概述"></a>Docker Compose概述</h1><blockquote><p>查找Compose文件参考？<a href="https://docs.docker.com/compose/compose-file/" target="_blank" rel="noopener">最新版本</a></p></blockquote><p>Compose是定义和运行docker多容器的工具。通过compose，使用Yaml文件配置你的应用服务。然后通过配置文件，只需一条命令，创建以及启动所有服务。学习更多Compose的功能，见<a href="https://docs.docker.com/compose/#features" target="_blank" rel="noopener">功能列表</a></p><p>Compose与CI workflows一样，工作在所有环境：生产，构建，开发，测试。在<a href="https://docs.docker.com/compose/#common-use-cases" target="_blank" rel="noopener">常用案例</a>中学习更多</p><p>Compose使用的基本三步骤：</p><ol><li>通过Dockerfile定义应用环境，以便可以在任何环境部署</li><li>在docker-compose.yml中定义能启动应用程序的services，以便它们能在一个隔离的环境中一起运行</li><li>执行 docker-compose up ，Compose启动并运行整个应用程序</li></ol><p>docker-compose.yml如下所示：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  web:</span></span><br><span class="line"><span class="attr">    build:</span> <span class="string">.</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">"5000:5000"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">.:/code</span></span><br><span class="line"><span class="attr">    - logvolume01:</span><span class="string">/var/log</span></span><br><span class="line"><span class="attr">    links:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">  redis:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line"><span class="attr">  logvolume01:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure><p>更多Compose文件信息，见<a href="https://docs.docker.com/compose/compose-file/" target="_blank" rel="noopener">Compose文件参考</a></p><p>Compose管理整个应用程序生命周期的命令：</p><ul><li>启动，停止，重建services</li><li>查看运行中的services状态</li><li>流式处理运行中的services日志输出</li><li>在service中执行一次性命令</li></ul><h2 id="Compose文档"><a href="#Compose文档" class="headerlink" title="Compose文档"></a>Compose文档</h2><ul><li><a href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener">Compose安装</a></li><li><a href="https://docs.docker.com/compose/gettingstarted/" target="_blank" rel="noopener">启动</a></li><li><a href="https://docs.docker.com/compose/django/" target="_blank" rel="noopener">从Django开始</a></li><li><a href="https://docs.docker.com/compose/rails/" target="_blank" rel="noopener">从Rails开始</a></li><li><a href="https://docs.docker.com/compose/wordpress/" target="_blank" rel="noopener">从Wordpress开始</a></li><li><a href="https://docs.docker.com/compose/faq/" target="_blank" rel="noopener">常见问题</a></li><li><a href="https://docs.docker.com/compose/reference/" target="_blank" rel="noopener">命令行参考</a></li><li><a href="https://docs.docker.com/compose/compose-file/" target="_blank" rel="noopener">Compose文件参考</a></li></ul><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>Compose的有效功能：</p><ul><li><a href="https://docs.docker.com/compose/overview/#Multiple-isolated-environments-on-a-single-host" target="_blank" rel="noopener">单个主机的多个隔离环境</a></li><li><a href="https://docs.docker.com/compose/overview/#preserve-volume-data-when-containers-are-created" target="_blank" rel="noopener">容器创建时保留数据卷</a></li><li><a href="https://docs.docker.com/compose/overview/#only-recreate-containers-that-have-changed" target="_blank" rel="noopener">仅重新创建已更改的容器</a></li><li><a href="https://docs.docker.com/compose/overview/#variables-and-moving-a-composition-between-environments" target="_blank" rel="noopener">不同变量定义不同环境</a></li></ul><h3 id="单个主机的多个隔离环境"><a href="#单个主机的多个隔离环境" class="headerlink" title="单个主机的多个隔离环境"></a>单个主机的多个隔离环境</h3><p>Compose使用项目名将环境彼此隔离，你在几个不同的上下文中使用此项目名：</p><ul><li>在开发主机上，创建单个环境的多个副本，例如当你要运行项目每个功能分支的稳定版本时</li><li>在CI服务器上，为了防止构建时相互干扰，可以将项目名称设置为唯一的构建号</li><li>在共享主机或开发主机上，防止可能使用了相同服务名称的不同项目相互干扰</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Docker-Compose概述&quot;&gt;&lt;a href=&quot;#Docker-Compose概述&quot; class=&quot;headerlink&quot; title=&quot;Docker Compose概述&quot;&gt;&lt;/a&gt;Docker Compose概述&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;查
      
    
    </summary>
    
    
      <category term="docker compose" scheme="http://yoursite.com/categories/docker-compose/"/>
    
    
  </entry>
  
  <entry>
    <title>一键创建php开发环境</title>
    <link href="http://yoursite.com/2017/05/26/xxx/"/>
    <id>http://yoursite.com/2017/05/26/xxx/</id>
    <published>2017-05-26T09:00:00.000Z</published>
    <updated>2019-09-08T10:08:44.385Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开发环境版本"><a href="#开发环境版本" class="headerlink" title="开发环境版本"></a><strong>开发环境版本</strong></h1><p>nginx 1.16.0</p><p>php 7.3.6</p><p>mysql 5.6.17</p><p>redis 3.2.3</p><p>rabbitmq 3.6.1</p><p>mongo 3.4.10</p><h1 id="架构"><a href="#架构" class="headerlink" title="架构"></a><strong>架构</strong></h1><p>vue前端所用nginx</p><p>php后端所用的phpcli、php-fpm+nginx</p><p>redis</p><p>rabbitmq</p><p>mysql</p><p>mongodb</p><h1 id="docker-commpose-yml"><a href="#docker-commpose-yml" class="headerlink" title="docker-commpose.yml"></a><strong>docker-commpose.yml</strong></h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  nginx:</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">newdev</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">registry-intl.cn-shanghai.aliyuncs.com/mywallet/dev-nginx:1.16.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 80:80 指将容器nginx的80端口映射到宿主机的80端口。宿主机端口请根据自己的开发环境修改</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"80:80"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vue前端nginx的配置文件挂载；./docker/nginx/default.conf指当前目录下的docker/nginx/default.conf,可自定义</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vue前端代码挂载,可自定义</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/home/wwwroot/www/acf_vue/vue/dist:/usr/share/nginx/html"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  phpcli:</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">newdev</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">registry-intl.cn-shanghai.aliyuncs.com/mywallet/dev-phpcli:7.3.6</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9999:9999"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/home/wwwroot/www/acf_hhh:/data/www"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  cnp:</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">newdev</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">registry-intl.cn-shanghai.aliyuncs.com/mywallet/dev-cnp:latest</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"9000:9000"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># php后端nginx的配置文件挂载；./docker/cnp/conf/nginx.conf指当前目录下的docker/cnp/conf/nginx.conf,可自定义</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"./docker/cnp/conf/nginx.conf:/usr/local/nginx/conf/nginx.conf"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># php后端代码挂载,可自定义</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/home/wwwroot/www/acf_hhh:/home/wwwroot/www/"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  mysql:</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">newdev</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">mysql:5.6.17</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3306:3306 指将mysql容器的3306端口映射到宿主机的3306端口，宿主机端口请根据自己的开发环境修改</span></span><br><span class="line"><span class="comment"># 外部可通过客户端访问mysql服务 宿主机ip + 自定义port；</span></span><br><span class="line"><span class="comment"># 代码内部访问mysql服务 容器名（mysql） + 3306</span></span><br><span class="line"><span class="comment"># root默认密码为12346，可在容器启动之前自定义</span></span><br><span class="line"><span class="comment"># mysql数据在不删除本地挂载的情况，重启容器不会被删除</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"3306:3306"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/data/db_mysql/data:/var/lib/mysql"</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">MYSQL_ROOT_PASSWORD=123456</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  redis:</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">newdev</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">redis:3.2.3</span></span><br><span class="line"><span class="attr">    command:</span> <span class="string">redis-server</span> <span class="bullet">--requirepass</span> <span class="string">"123456"</span> <span class="bullet">--appendonly</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6379:6379 指将redis容器的6379端口映射到宿主机的6379端口，宿主机端口请根据自己的开发环境修改</span></span><br><span class="line"><span class="comment"># 外部可通过客户端访问redis服务 宿主机ip + 自定义port；</span></span><br><span class="line"><span class="comment"># 代码内部访问redis服务 容器名（redis） + 6379</span></span><br><span class="line"><span class="comment"># 默认密码为12346，可在容器启动之前自定义</span></span><br><span class="line"><span class="comment"># redis数据在不删除本地挂载的情况，重启容器不会被删除</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"6379:6379"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/data/db_redis:/data</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  mongodb:</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">newdev</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">mongo:3.4.10</span></span><br><span class="line"><span class="attr">    command:</span> <span class="string">[--auth]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 27017:27017 指将mongodb容器的27017端口映射到宿主机的27017端口，宿主机端口请根据自己的开发环境修改</span></span><br><span class="line"><span class="comment"># 外部可通过客户端访问redis服务 宿主机ip + 自定义port；</span></span><br><span class="line"><span class="comment"># 代码内部访问mongodb服务 容器名（mongodb） + 27017</span></span><br><span class="line"><span class="comment"># 相关库以及账号密码配置，请查看 注意事项</span></span><br><span class="line"><span class="comment"># redis数据在不删除本地挂载的情况，重启容器不会被删除</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"27017:27017"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/data/db_mongo:/data/db</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  rabbitmq:</span></span><br><span class="line"><span class="attr">    networks:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">newdev</span></span><br><span class="line"><span class="attr">    image:</span> <span class="attr">rabbitmq:3.7.0-management</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5672:5672 指将mongodb容器的5672端口映射到宿主机的5672端口，宿主机端口请根据自己的开发环境修改</span></span><br><span class="line"><span class="comment"># 外部可通过客户端访问rabbitmq服务 宿主机ip + 自定义port；</span></span><br><span class="line"><span class="comment"># 代码内部访问mongodb服务 容器名（rabbitmq） + 5672</span></span><br><span class="line"><span class="comment"># 15672是rabbitmq web的端口，可通过宿主机ip + 自定义访问，账号密码均为 guest</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"5672:5672"</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"15672:15672"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"/data/db_rabbitmq:/var/lib/rabbitmq"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  newdev:</span></span><br></pre></td></tr></table></figure><p>docker-compose安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` -o /usr/<span class="built_in">local</span>/bin/docker-compose &amp;&amp; chmod u+x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><p>启动容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>删除容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><h1 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a><strong>注意事项：</strong></h1><ul><li><p>mysql启动之后，需要通过客户端连接到mysql，新建项目对应的database  </p></li><li><p>mongodb启动之后，可通过portainer进入容器，新建项目对应的库以及账号密码</p></li></ul><p>进入容器，输入mongo，回车</p><p>进入管理库 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br></pre></td></tr></table></figure><p>在管理库中创建超级用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.createUser(</span><br><span class="line">  &#123;</span><br><span class="line">    user: <span class="string">"toor"</span>,</span><br><span class="line">    <span class="built_in">pwd</span>: <span class="string">"123456"</span>,</span><br><span class="line">    roles: [ &#123; role: <span class="string">"root"</span>, db: <span class="string">"admin"</span> &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>登录超级用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.auth(<span class="string">'toor'</span>,<span class="string">'123456'</span>)</span><br></pre></td></tr></table></figure><p>进入新建库newacf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use newacf</span><br></pre></td></tr></table></figure><p>在test库中创建用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.createUser(</span><br><span class="line">  &#123;</span><br><span class="line">    user: <span class="string">"newacf"</span>,</span><br><span class="line">    <span class="built_in">pwd</span>: <span class="string">"123456"</span>,</span><br><span class="line">    roles: [ &#123; role: <span class="string">"dbOwner"</span>, db: <span class="string">"newacf"</span> &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>登录test库的用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.auth(<span class="string">'newacf'</span>,<span class="string">'123456'</span>)</span><br></pre></td></tr></table></figure><p>在test库任意新建一张表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.newacf.insert(&#123;<span class="string">'x'</span>:1&#125;)</span><br></pre></td></tr></table></figure><p>退出mongo客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;开发环境版本&quot;&gt;&lt;a href=&quot;#开发环境版本&quot; class=&quot;headerlink&quot; title=&quot;开发环境版本&quot;&gt;&lt;/a&gt;&lt;strong&gt;开发环境版本&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;nginx 1.16.0&lt;/p&gt;
&lt;p&gt;php 7.3.6&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
      <category term="docker compose" scheme="http://yoursite.com/categories/docker-compose/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="compose" scheme="http://yoursite.com/tags/compose/"/>
    
  </entry>
  
</feed>
